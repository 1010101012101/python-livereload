{"name":"Python LiveReload","body":"# Python LiveReload\r\n\r\nLiveReload Server in Python Version.\r\n\r\nWeb Developers need to refresh a browser everytime when he saved a file (css,\r\njavascript, html), it is really boring. LiveReload will take care of that for\r\nyou. When you saved a file, your browser will refresh itself. And what's more,\r\nit can do some tasks like compiling less to css before the browser refreshing.\r\n\r\n## Installation\r\n\r\nPython LiveReload is designed for web developers who know Python.\r\n\r\n### Install python-livereload\r\n\r\nInstall Python LiveReload with pip:\r\n\r\n    $ pip install livereload\r\n\r\nIf you don't have pip installed, try easy_install:\r\n\r\n    $ easy_install livereload\r\n\r\n\r\n### Install Browser Extensions\r\n\r\nGet Browser Extensions From LiveReload.com\r\n\r\n+ Chrome Extension\r\n+ Safari Extension\r\n+ Firefox Extension\r\n\r\nVisit: http://help.livereload.com/kb/general-use/browser-extensions\r\n\r\n### Get Notification\r\n\r\nIf you are on Mac, and you are a Growl user:\r\n\r\n    $ pip install gntp\r\n\r\nIf you are on Ubuntu, you don't need to do anything. Notification just works.\r\n\r\n### Working with file protocal\r\n\r\nEnable file protocal on Chrome:\r\n\r\n![enable file protocal](http://i.imgur.com/qGpJI.png)\r\n\r\n\r\n## Quickstart\r\n\r\nLiveReload is designed for more complex tasks, not just for refreshing a\r\nbrowser. But you can still do the simple task.\r\n\r\nAssume you have livereload and its extension installed, and now you are in your\r\nworking directory. With command:\r\n\r\n    $ livereload\r\n\r\nyour browser will reload, if any file in the working directory changed.\r\n\r\n\r\n## Guardfile\r\n\r\nMore complex tasks can be done by Guardfile. Write a Guardfile in your working\r\ndirectory, the basic syntax:\r\n\r\n    #!/usr/bin/env python\r\n    from livereload.task import Task\r\n\r\n    Task.add('static/style.css')\r\n    Task.add('*.html')\r\n\r\nNow livereload will only guard static/style.css and html in your workding\r\ndirectory.\r\n\r\nBut python-livereload is more than that, you can specify a task before\r\nrefreshing the browser:\r\n\r\n    #!/usr/bin/env python\r\n    from livereload.task import Task\r\n    from livereload.compiler import lessc\r\n\r\n    Task.add('style.less', lessc('style.less', 'style.css'))\r\n\r\nAnd it will compile less css before refreshing the browser now.\r\n\r\n\r\n## Others\r\n\r\nIf you are on a Mac, you can buy [LiveReload2](http://livereload.com).\r\n\r\nIf you are a rubist, you can get guard-livereload.\r\n","tagline":"livereload server in python","google":"UA-21475122-1","note":"Don't delete this file! It's used internally to help with page regeneration."}